{
    "appid": "96e02fdb-3f50-494c-8c48-8e01141d4c7d",
    "name": "Markdown Utils",
    "description": "Provides some functions relating to Markdown content.",
    "type": "information",
    "product_vendor": "Greg Ford",
    "logo": "markdownutils.svg",
    "logo_dark": "markdownutils_dark.svg",
    "product_name": "Markdown Utils",
    "python_version": "3",
    "product_version_regex": ".*",
    "publisher": "Greg Ford",
    "license": "Copyright (c) Greg Ford, 2024",
    "app_version": "1.0.0",
    "utctime_updated": "2024-02-05T05:31:39.575162Z",
    "package_name": "phantom_markdownutils",
    "main_module": "markdownutils_connector.py",
    "min_phantom_version": "6.2.0.355",
    "app_wizard_version": "1.0.0",
    "configuration": {},
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "verbose": "",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "convert html to markdown",
            "identifier": "convert_html_to_markdown",
            "description": "Converts HTML to Markdown",
            "verbose": "Converts HTML to Markdown",
            "type": "generic",
            "read_only": true,
            "parameters": {
                "html_text": {
                    "description": "HTML text to be converted",
                    "data_type": "string",
                    "required": true,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "html_text"
                },
                "defang_urls": {
                    "description": "Defang URLs to make them non-clickable",
                    "data_type": "boolean",
                    "required": true,
                    "primary": false,
                    "contains": [],
                    "default": "",
                    "order": 1,
                    "name": "defang_urls"
                },
                "render_images_using_vault_items": {
                    "description": "Whether to render images using vault items",
                    "data_type": "boolean",
                    "required": true,
                    "primary": false,
                    "contains": [],
                    "default": "",
                    "order": 2,
                    "name": "render_images_using_vault_items"
                },
                "container_id_with_images": {
                    "description": "Container ID to use for vault images",
                    "data_type": "numeric",
                    "required": false,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 3,
                    "name": "container_id_with_images"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.html_text",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "html_text",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.defang_urls",
                    "data_type": "boolean",
                    "contains": [],
                    "column_name": "defang_urls",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.render_images_using_vault_items",
                    "data_type": "boolean",
                    "contains": [],
                    "column_name": "render_images_using_vault_items",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.container_id_with_images",
                    "data_type": "numeric",
                    "contains": [],
                    "column_name": "container_id_with_images",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ],
    "pip3_dependencies": {
        "pypi": [
            {
                "module": "markdownify"
            }
        ]
    }
}